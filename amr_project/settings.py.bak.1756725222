import os
from pathlib import Path

BASE_DIR = Path(__file__).resolve().parent.parent

SECRET_KEY = os.getenv("SECRET_KEY", "demo-secret")

# DEBUG comes from env (default False on Render)
DEBUG = os.getenv("DEBUG", "False").lower() == "true"

# Allow hosts from env or default to Render + local
_allowed = os.getenv("ALLOWED_HOSTS", ".onrender.com,localhost,127.0.0.1")

# Installed apps
INSTALLED_APPS = [
]

MIDDLEWARE = [
    'amr_project.mw_cors_simple.SimpleCORSMiddleware',
]

ROOT_URLCONF = 'amr_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
            ],
        },
    },

WSGI_APPLICATION = 'amr_project.wsgi.application'

# Database (SQLite by default, can be overridden with DATABASE_URL)
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Trust proxy headers (needed on Render)
SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")

# CORS (for Netlify/React frontend)

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
    'DEFAULT_PERMISSION_CLASSES': [
]

# === DRF config ===
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
    'DEFAULT_PERMISSION_CLASSES': [
]
    "authorization",
    "content-type",
    "accept",
    "origin",

CSRF_TRUSTED_ORIGINS = [
]

# === CORS (browser) ===
# Requires: pip install django-cors-headers
try:
    INSTALLED_APPS
except NameError:
    INSTALLED_APPS = []
if 'corsheaders' not in INSTALLED_APPS:
    INSTALLED_APPS += ['corsheaders']

try:
    MIDDLEWARE
except NameError:
    MIDDLEWARE = []
if 'corsheaders.middleware.CorsMiddleware' not in MIDDLEWARE:
    MIDDLEWARE = ['corsheaders.middleware.CorsMiddleware'] + list(MIDDLEWARE)

# Allow your Netlify site and local dev
]}]

# Allow Authorization header so Token auth works
from corsheaders.defaults import default_headers
}])

# Hosts that can serve Django (Render + local)
try:
    ALLOWED_HOSTS
except NameError:
    if h not in ALLOWED_HOSTS:
        ALLOWED_HOSTS.append(h)

# ==== CORS DEBUG SETUP ====
# pip install django-cors-headers
if 'corsheaders' not in INSTALLED_APPS:
    INSTALLED_APPS += ['corsheaders']

if 'corsheaders.middleware.CorsMiddleware' not in MIDDLEWARE:
    MIDDLEWARE = ['corsheaders.middleware.CorsMiddleware'] + list(MIDDLEWARE)

# TEMP: allow all origins while we debug (remove after it works)

# Allow Authorization header so Token auth works
try:
    from corsheaders.defaults import default_headers
except Exception:

# Make sure your hosts include Render + Netlify + local
for _h in ['127.0.0.1', 'localhost', 'amr-app.onrender.com', 'stirring-alpaca-e31b52.netlify.app']:
    if _h not in ALLOWED_HOSTS:
        ALLOWED_HOSTS.append(_h)

# === CORS (debug-safe) ===
# Requires: django-cors-headers
if 'corsheaders' not in INSTALLED_APPS:
    INSTALLED_APPS += ['corsheaders']

# Put CorsMiddleware at the very top (before CommonMiddleware)
if 'corsheaders.middleware.CorsMiddleware' not in MIDDLEWARE:
    MIDDLEWARE = ['corsheaders.middleware.CorsMiddleware'] + list(MIDDLEWARE)

# TEMP while we debug: allow everything (remove after it works)

# Allow Authorization so Token auth works from the browser
try:
    from corsheaders.defaults import default_headers
except Exception:

# Helpful (not strictly required for GET)
CSRF_TRUSTED_ORIGINS = list(set((
    *(CSRF_TRUSTED_ORIGINS if 'CSRF_TRUSTED_ORIGINS' in globals() else [])
)))
# Harmless to include; not required for CORS
ALLOWED_HOSTS = ['127.0.0.1','localhost','amr-app.onrender.com','stirring-alpaca-e31b52.netlify.app']
